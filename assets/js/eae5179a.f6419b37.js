"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9761],{5591:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>m});var r=a(8527);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(a),c=n,m=p["".concat(s,".").concat(c)]||p[c]||g[c]||o;return a?r.createElement(m,l(l({ref:t},d),{},{components:a})):r.createElement(m,l({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},8280:(e,t,a)=>{a.d(t,{A:()=>l});var r=a(8527),n=a(4351);const o={tabItem:"tabItem_o9Hs"};function l(e){let{children:t,hidden:a,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.A)(o.tabItem,l),hidden:a},t)}},6415:(e,t,a)=>{a.d(t,{A:()=>v});var r=a(4465),n=a(8527),o=a(4351),l=a(1808),i=a(1849),s=a(7917),u=a(8418),d=a(3514);function p(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function g(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function c(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,i.W6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function y(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=g(e),[l,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[s,u]=m({queryString:a,groupId:r}),[p,y]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,d.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),h=(()=>{const e=s??p;return c({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!c({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),y(e)}),[u,y,o]),tabValues:o}}var h=a(8613);const f={tabList:"tabList_Dwv5",tabItem:"tabItem_KiUr"};function b(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:u}=e;const d=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.a_)(),g=e=>{const t=e.currentTarget,a=d.indexOf(t),r=u[a].value;r!==i&&(p(t),s(r))},c=e=>{let t=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>d.push(e),onKeyDown:c,onClick:g},l,{className:(0,o.A)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":i===t})}),a??t)})))}function w(e){let{lazy:t,children:a,selectedValue:r}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function N(e){const t=y(e);return n.createElement("div",{className:(0,o.A)("tabs-container",f.tabList)},n.createElement(b,(0,r.A)({},e,t)),n.createElement(w,(0,r.A)({},e,t)))}function v(e){const t=(0,h.A)();return n.createElement(N,(0,r.A)({key:String(t)},e))}},7501:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var r=a(4465),n=(a(8527),a(5591)),o=a(6415),l=a(8280);const i={id:"get-dataset-row",title:"Get Dataset Row Node",sidebar_label:"Get Dataset Row"},s=void 0,u={unversionedId:"node-reference/get-dataset-row",id:"node-reference/get-dataset-row",title:"Get Dataset Row Node",description:"Get Dataset Row Node Screenshot",source:"@site/docs/node-reference/get-dataset-row.mdx",sourceDirName:"node-reference",slug:"/node-reference/get-dataset-row",permalink:"/docs/node-reference/get-dataset-row",draft:!1,editUrl:"https://github.com/ironclad/rivet/tree/main/packages/docs/docs/node-reference/get-dataset-row.mdx",tags:[],version:"current",frontMatter:{id:"get-dataset-row",title:"Get Dataset Row Node",sidebar_label:"Get Dataset Row"},sidebar:"nodeReference",previous:{title:"Get All Datasets",permalink:"/docs/node-reference/get-all-datasets"},next:{title:"Graph Input",permalink:"/docs/node-reference/graph-input"}},d={},p=[{value:"Overview",id:"overview",level:2},{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2},{value:"Editor Settings",id:"editor-settings",level:2},{value:"Example 1: Retrieve a row from a dataset",id:"example-1-retrieve-a-row-from-a-dataset",level:2},{value:"Example 2: Retrieve a dynamic row from a dataset",id:"example-2-retrieve-a-dynamic-row-from-a-dataset",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"FAQ",id:"faq",level:2},{value:"See Also",id:"see-also",level:2}],g={toc:p},c="wrapper";function m(e){let{components:t,...i}=e;return(0,n.yg)(c,(0,r.A)({},g,i,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"Get Dataset Row Node Screenshot",src:a(9143).A,width:"334",height:"160"})),(0,n.yg)("h2",{id:"overview"},"Overview"),(0,n.yg)("p",null,"The Get Dataset Row Node allows you to retrieve a specific row from a dataset by providing the dataset ID and the row ID. This node is particularly useful when you want to access and process specific rows of data in a dataset by their ID."),(0,n.yg)("p",null,"The node requires a dataset provider to be available in the context when the graph is being run. The dataset provider is responsible for managing the storage and retrieval of datasets. In the Rivet application, the dataset provider is handled for you automatically."),(0,n.yg)("p",null,"For more information on datasets, see the ",(0,n.yg)("a",{parentName:"p",href:"/docs/user-guide/features/data-studio"},"Data Studio")," section of the user guide."),(0,n.yg)(o.A,{defaultValue:"inputs",values:[{label:"Inputs",value:"inputs"},{label:"Outputs",value:"outputs"},{label:"Editor Settings",value:"settings"}],mdxType:"Tabs"},(0,n.yg)(l.A,{value:"inputs",mdxType:"TabItem"},(0,n.yg)("h2",{id:"inputs"},"Inputs"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Title"),(0,n.yg)("th",{parentName:"tr",align:null},"Data Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"),(0,n.yg)("th",{parentName:"tr",align:null},"Default Value"),(0,n.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Row ID"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"string")),(0,n.yg)("td",{parentName:"tr",align:null},"The ID of the row to retrieve."),(0,n.yg)("td",{parentName:"tr",align:null},"(required if if the input toggle for Row ID is enabled)"),(0,n.yg)("td",{parentName:"tr",align:null},"The input will be coerced into a string if it is not a string.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Dataset ID"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"string")),(0,n.yg)("td",{parentName:"tr",align:null},"The ID of the dataset to retrieve the row from. This input is only available if ",(0,n.yg)("inlineCode",{parentName:"td"},"Use Dataset ID Input")," is enabled."),(0,n.yg)("td",{parentName:"tr",align:null},"(required if if the input toggle for Dataset ID is enabled)"),(0,n.yg)("td",{parentName:"tr",align:null},"The input will be coerced into a string if it is not a string."))))),(0,n.yg)(l.A,{value:"outputs",mdxType:"TabItem"},(0,n.yg)("h2",{id:"outputs"},"Outputs"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Title"),(0,n.yg)("th",{parentName:"tr",align:null},"Data Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"),(0,n.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Row"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"object")),(0,n.yg)("td",{parentName:"tr",align:null},"The row of data retrieved from the dataset."),(0,n.yg)("td",{parentName:"tr",align:null},"If the row is not found, this port will not be ran."))))),(0,n.yg)(l.A,{value:"settings",mdxType:"TabItem"},(0,n.yg)("h2",{id:"editor-settings"},"Editor Settings"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Setting"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"),(0,n.yg)("th",{parentName:"tr",align:null},"Default Value"),(0,n.yg)("th",{parentName:"tr",align:null},"Use Input Toggle"),(0,n.yg)("th",{parentName:"tr",align:null},"Input Data Type"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Dataset"),(0,n.yg)("td",{parentName:"tr",align:null},"The ID of the dataset to retrieve the row from."),(0,n.yg)("td",{parentName:"tr",align:null},"(required)"),(0,n.yg)("td",{parentName:"tr",align:null},"Yes"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"string"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"Row ID"),(0,n.yg)("td",{parentName:"tr",align:null},"The ID of the row to retrieve."),(0,n.yg)("td",{parentName:"tr",align:null},"(required)"),(0,n.yg)("td",{parentName:"tr",align:null},"Yes"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("inlineCode",{parentName:"td"},"string"))))))),(0,n.yg)("h2",{id:"example-1-retrieve-a-row-from-a-dataset"},"Example 1: Retrieve a row from a dataset"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"In the ",(0,n.yg)("a",{parentName:"li",href:"/docs/user-guide/features/data-studio"},"Data Studio"),", create a new dataset with the name ",(0,n.yg)("inlineCode",{parentName:"li"},"Employees")," and add a few rows of data."),(0,n.yg)("li",{parentName:"ol"},"Create a Get Dataset Row Node and set the Dataset to ",(0,n.yg)("inlineCode",{parentName:"li"},"Employees")," and the Row ID to the ID of one of the rows you added to the dataset. You can see the IDs as the first column in the Data Studio."),(0,n.yg)("li",{parentName:"ol"},"Run the graph. The ",(0,n.yg)("inlineCode",{parentName:"li"},"Row")," output of the Get Dataset Row Node should contain the data of the row you specified.")),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"Get Dataset Row Node Example 1",src:a(7804).A,width:"342",height:"230"})),(0,n.yg)("h2",{id:"example-2-retrieve-a-dynamic-row-from-a-dataset"},"Example 2: Retrieve a dynamic row from a dataset"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"In the ",(0,n.yg)("a",{parentName:"li",href:"/docs/user-guide/features/data-studio"},"Data Studio"),", create a new dataset with the name ",(0,n.yg)("inlineCode",{parentName:"li"},"Employees")," and add a few rows of data."),(0,n.yg)("li",{parentName:"ol"},"Create a Get Dataset Row Node and set the Dataset to ",(0,n.yg)("inlineCode",{parentName:"li"},"Employees")," and enable the input toggle for Row ID."),(0,n.yg)("li",{parentName:"ol"},"Create a ",(0,n.yg)("a",{parentName:"li",href:"/docs/node-reference/text"},"Text Node")," and set the text to the ID of one of the rows you added to the dataset. Connect the Text Node to the Row ID input of the Get Dataset Row Node."),(0,n.yg)("li",{parentName:"ol"},"Run the graph. The ",(0,n.yg)("inlineCode",{parentName:"li"},"Row")," output of the Get Dataset Row Node should contain the data of the row you specified.")),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"Get Dataset Row Node Example 2",src:a(2887).A,width:"728",height:"239"})),(0,n.yg)("h2",{id:"error-handling"},"Error Handling"),(0,n.yg)("p",null,"The Get Dataset Row Node will error if the dataset provider is not available in the context when the graph is being run. It will also error if the Dataset ID or Row ID is not provided. If the specified row does not exist in the dataset, the ",(0,n.yg)("inlineCode",{parentName:"p"},"Row")," output will not be ran."),(0,n.yg)("h2",{id:"faq"},"FAQ"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Q: What is a dataset provider?")),(0,n.yg)("p",null,"A: A dataset provider is an object that is responsible for managing the storage and retrieval of datasets. It is passed to the context when the graph is being run. The dataset provider must implement the ",(0,n.yg)("inlineCode",{parentName:"p"},"DatasetProvider")," interface, which includes methods for getting, putting, and deleting datasets. See the ",(0,n.yg)("a",{parentName:"p",href:"/docs/api-reference"},"API Reference")," for more information."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Q: Can I retrieve multiple rows at once?")),(0,n.yg)("p",null,"A: No, the Get Dataset Row Node can only retrieve one row at a time. If you want to retrieve multiple rows, you can use multiple Get Dataset Row Nodes, or consider ",(0,n.yg)("a",{parentName:"p",href:"/docs/user-guide/splitting"},"splitting")," the Get Dataset Row Node."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Q: What happens if the row does not exist?")),(0,n.yg)("p",null,"A: If the row does not exist, the ",(0,n.yg)("inlineCode",{parentName:"p"},"Row")," output will not be ran. No error will be thrown. You can use an ",(0,n.yg)("a",{parentName:"p",href:"/docs/node-reference/if"},"If Node")," to check if the ",(0,n.yg)("inlineCode",{parentName:"p"},"Row")," output was ran."),(0,n.yg)("h2",{id:"see-also"},"See Also"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/node-reference/load-dataset"},"Load Dataset Node")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/node-reference/create-dataset"},"Create Dataset Node")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/node-reference/get-all-datasets"},"Get All Datasets Node")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/node-reference/knn-dataset"},"KNN Dataset Node")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"/docs/node-reference/append-to-dataset"},"Append To Dataset Node"))))}m.isMDXComponent=!0},7804:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/get-dataset-row-node-example-01-f1e7d86243506ae5f20de500b21fd6b4.png"},2887:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/get-dataset-row-node-example-02-fd6b0572805d65eb0c796fec86a91659.png"},9143:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/get-dataset-row-node-22524fa9bca937c03c5a111319c56207.png"}}]);