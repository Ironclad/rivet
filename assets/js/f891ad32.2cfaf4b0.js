"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4723],{5591:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var a=t(8527);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),s=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(u.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(t),d=r,m=c["".concat(u,".").concat(d)]||c[d]||g[d]||i;return t?a.createElement(m,l(l({ref:n},p),{},{components:t})):a.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8280:(e,n,t)=>{t.d(n,{A:()=>l});var a=t(8527),r=t(4351);const i={tabItem:"tabItem_o9Hs"};function l(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,l),hidden:t},n)}},6415:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(4465),r=t(8527),i=t(4351),l=t(1808),o=t(1849),u=t(7917),s=t(8418),p=t(3514);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function g(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??c(t);return function(e){const n=(0,s.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function d(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,o.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,u.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})}),[i,a])]}function y(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,i=g(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i}))),[u,s]=m({queryString:t,groupId:a}),[c,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,i]=(0,p.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:a}),f=(()=>{const e=u??c;return d({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),s(e),y(e)}),[s,y,i]),tabValues:i}}var f=t(8613);const h={tabList:"tabList_Dwv5",tabItem:"tabItem_KiUr"};function v(e){let{className:n,block:t,selectedValue:o,selectValue:u,tabValues:s}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),g=e=>{const n=e.currentTarget,t=p.indexOf(n),a=s[t].value;a!==o&&(c(n),u(a))},d=e=>{let n=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const t=p.indexOf(e.currentTarget)+1;n=p[t]??p[0];break}case"ArrowLeft":{const t=p.indexOf(e.currentTarget)-1;n=p[t]??p[p.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n)},s.map((e=>{let{value:n,label:t,attributes:l}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,key:n,ref:e=>p.push(e),onKeyDown:d,onClick:g},l,{className:(0,i.A)("tabs__item",h.tabItem,l?.className,{"tabs__item--active":o===n})}),t??n)})))}function b(e){let{lazy:n,children:t,selectedValue:a}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function N(e){const n=y(e);return r.createElement("div",{className:(0,i.A)("tabs-container",h.tabList)},r.createElement(v,(0,a.A)({},e,n)),r.createElement(b,(0,a.A)({},e,n)))}function w(e){const n=(0,f.A)();return r.createElement(N,(0,a.A)({key:String(n)},e))}},646:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=t(4465),r=(t(8527),t(5591)),i=t(6415),l=t(8280);const o={title:"Rivet Integration Getting Started"},u=void 0,s={unversionedId:"api-reference/getting-started-integration",id:"api-reference/getting-started-integration",title:"Rivet Integration Getting Started",description:"Welcome to the starting guide for integrating Rivet into your application! Currently, we only support integration via Node.js using the @ironclad/rivet-node package.",source:"@site/docs/api-reference/getting-started-integration.mdx",sourceDirName:"api-reference",slug:"/api-reference/getting-started-integration",permalink:"/docs/api-reference/getting-started-integration",draft:!1,editUrl:"https://github.com/ironclad/rivet/tree/main/packages/docs/docs/api-reference/getting-started-integration.mdx",tags:[],version:"current",frontMatter:{title:"Rivet Integration Getting Started"},sidebar:"apiReference",previous:{title:"Rivet API Reference",permalink:"/docs/api-reference"},next:{title:"Remote Debugging with Rivet",permalink:"/docs/api-reference/remote-debugging"}},p={},c=[{value:"Installation",id:"installation",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Using <code>runGraphInFile</code>",id:"using-rungraphinfile",level:2},{value:"<code>runGraphInFile</code> Parameters",id:"rungraphinfile-parameters",level:3},{value:"<code>RunGraphOptions</code>",id:"rungraphoptions",level:3},{value:"Example Code",id:"example-code",level:3},{value:"Remote Debugging",id:"remote-debugging",level:2},{value:"See Also",id:"see-also",level:2}],g={toc:c},d="wrapper";function m(e){let{components:n,...t}=e;return(0,r.yg)(d,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Welcome to the starting guide for integrating Rivet into your application! Currently, we only support integration via Node.js using the ",(0,r.yg)("inlineCode",{parentName:"p"},"@ironclad/rivet-node")," package."),(0,r.yg)("h2",{id:"installation"},"Installation"),(0,r.yg)("p",null,"Install using your preferred package manager:"),(0,r.yg)(i.A,{defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"NPM",value:"npm"},{label:"pnpm",value:"pnpm"}],mdxType:"Tabs"},(0,r.yg)(l.A,{value:"yarn",mdxType:"TabItem"},(0,r.yg)("p",null,"Install using Yarn:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add @ironclad/rivet-node\n"))),(0,r.yg)(l.A,{value:"npm",mdxType:"TabItem"},(0,r.yg)("p",null,"Install using NPM:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install @ironclad/rivet-node\n"))),(0,r.yg)(l.A,{value:"pnpm",mdxType:"TabItem"},(0,r.yg)("p",null,"Install using pnpm:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm add @ironclad/rivet-node\n")))),(0,r.yg)("h2",{id:"getting-started"},"Getting Started"),(0,r.yg)("p",null,"Once Rivet is installed, you can import it into your application:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"import * as Rivet from '@ironclad/rivet-node';\n")),(0,r.yg)("h2",{id:"using-rungraphinfile"},"Using ",(0,r.yg)("inlineCode",{parentName:"h2"},"runGraphInFile")),(0,r.yg)("p",null,"The simplest way to get started with Rivet is by using the ",(0,r.yg)("inlineCode",{parentName:"p"},"runGraphInFile")," function. This function allows you to execute a graph defined in a Rivet project file."),(0,r.yg)("h3",{id:"rungraphinfile-parameters"},(0,r.yg)("inlineCode",{parentName:"h3"},"runGraphInFile")," Parameters"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"runGraphInFile")," function takes two parameters:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"path"),": A string representing the path to your Rivet project file."),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"options"),": An object of type ",(0,r.yg)("inlineCode",{parentName:"li"},"RunGraphOptions"),".")),(0,r.yg)("h3",{id:"rungraphoptions"},(0,r.yg)("inlineCode",{parentName:"h3"},"RunGraphOptions")),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"RunGraphOptions")," type is used to pass various parameters to the ",(0,r.yg)("inlineCode",{parentName:"p"},"runGraphInFile")," function. Here is what it looks like:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"export type RunGraphOptions = {\n  graph: string;\n  inputs?: Record<string, LooseDataValue>;\n  context?: Record<string, LooseDataValue>;\n  remoteDebugger?: RivetDebuggerServer;\n  nativeApi?: NativeApi;\n  externalFunctions?: {\n    [key: string]: ExternalFunction;\n  };\n  onUserEvent?: {\n    [key: string]: (data: DataValue | undefined) => void;\n  };\n  abortSignal?: AbortSignal;\n} & {\n  [P in keyof ProcessEvents as `on${PascalCase<P>}`]?: (params: ProcessEvents[P]) => void;\n} & Settings;\n")),(0,r.yg)("p",null,"Let's break down the important fields:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"graph"),": Specifies the graph you're running. This can either be the ID or the display name of the graph."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"inputs"),': Specifies the input values to the graph. These can either be plain JavaScript values like "foo", or ',(0,r.yg)("inlineCode",{parentName:"li"},"{type: 'string', value: 'foo'}")," objects."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"context"),": Similar to ",(0,r.yg)("inlineCode",{parentName:"li"},"inputs"),", but these values are available to every graph and subgraph."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"externalFunctions"),": This is how you define integration points that you can call from inside Rivet graphs."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"openAiKey"),": Your OpenAI API key. This is required if you're using any Chat nodes in your graph."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"openAiOrganization"),": If you are using a non-default OpenAI organization, you may specify your organization here.")),(0,r.yg)("h3",{id:"example-code"},"Example Code"),(0,r.yg)("p",null,"Here's a basic example of using ",(0,r.yg)("inlineCode",{parentName:"p"},"runGraphInFile"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"import { runGraphInFile, DataValue } from '@ironclad/rivet-node';\n\nawait runGraphInFile('./myProject.rivet', {\n  graph: 'My Graph Name',\n  inputs: {\n    myInput: 'hello world',\n  },\n  context: {\n    myContext: 'global value',\n  },\n  externalFunctions: {\n    helloWorld: async (...args: unknown[]): Promise<DataValue> => {\n      return {\n        type: 'string',\n        value: 'hello world',\n      };\n    },\n  },\n  onUserEvent: {\n    myEvent: (data: DataValue): Promise<void> => {\n      console.log(data);\n    },\n  },\n  openAiKey: 'my-openai-key',\n  openAiOrganization: 'my-organization',\n});\n")),(0,r.yg)("h2",{id:"remote-debugging"},"Remote Debugging"),(0,r.yg)("p",null,"See the ",(0,r.yg)("a",{parentName:"p",href:"./remote-debugging"},"Remote Debugging")," page for more information on how to set up the remote debugger."),(0,r.yg)("h2",{id:"see-also"},"See Also"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"./node/overview"},"Rivet Node API Reference"))))}m.isMDXComponent=!0}}]);