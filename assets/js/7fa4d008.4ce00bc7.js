"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4021],{1042:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var r=a(3249);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function u(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),p=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=p(a),c=n,m=d["".concat(i,".").concat(c)]||d[c]||h[c]||l;return a?r.createElement(m,o(o({ref:t},s),{},{components:a})):r.createElement(m,o({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=c;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[d]="string"==typeof e?e:n,o[1]=u;for(var p=2;p<l;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5089:(e,t,a)=>{a.d(t,{Z:()=>o});var r=a(3249),n=a(2689);const l={tabItem:"tabItem_o9Hs"};function o(e){let{children:t,hidden:a,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(l.tabItem,o),hidden:a},t)}},2327:(e,t,a)=>{a.d(t,{Z:()=>y});var r=a(7396),n=a(3249),l=a(2689),o=a(5986),u=a(6659),i=a(4532),p=a(5821),s=a(3312);function d(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function h(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function c(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,u.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(l),(0,n.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,l=h(e),[o,u]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[i,p]=m({queryString:a,groupId:r}),[d,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,s.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:r}),b=(()=>{const e=i??d;return c({value:e,tabValues:l})?e:null})();(0,n.useLayoutEffect)((()=>{b&&u(b)}),[b]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!c({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);u(e),p(e),g(e)}),[p,g,l]),tabValues:l}}var b=a(3072);const f={tabList:"tabList_Dwv5",tabItem:"tabItem_KiUr"};function N(e){let{className:t,block:a,selectedValue:u,selectValue:i,tabValues:p}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),h=e=>{const t=e.currentTarget,a=s.indexOf(t),r=p[a].value;r!==u&&(d(t),i(r))},c=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;t=s[a]??s[0];break}case"ArrowLeft":{const a=s.indexOf(e.currentTarget)-1;t=s[a]??s[s.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:o}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:e=>s.push(e),onKeyDown:c,onClick:h},o,{className:(0,l.Z)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":u===t})}),a??t)})))}function k(e){let{lazy:t,children:a,selectedValue:r}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function v(e){const t=g(e);return n.createElement("div",{className:(0,l.Z)("tabs-container",f.tabList)},n.createElement(N,(0,r.Z)({},e,t)),n.createElement(k,(0,r.Z)({},e,t)))}function y(e){const t=(0,b.Z)();return n.createElement(v,(0,r.Z)({key:String(t)},e))}},1795:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>u,metadata:()=>p,toc:()=>d});var r=a(7396),n=(a(3249),a(1042)),l=a(2327),o=a(5089);const u={id:"subgraph",title:"Subgraph Node",sidebar_label:"Subgraph"},i=void 0,p={unversionedId:"node-reference/subgraph",id:"node-reference/subgraph",title:"Subgraph Node",description:"Subgraph Node Screenshot",source:"@site/docs/node-reference/subgraph.mdx",sourceDirName:"node-reference",slug:"/node-reference/subgraph",permalink:"/docs/node-reference/subgraph",draft:!1,editUrl:"https://github.com/ironclad/rivet/tree/main/packages/docs/docs/node-reference/subgraph.mdx",tags:[],version:"current",frontMatter:{id:"subgraph",title:"Subgraph Node",sidebar_label:"Subgraph"},sidebar:"nodeReference",previous:{title:"Set Global",permalink:"/docs/node-reference/set-global"},next:{title:"Wait For Event",permalink:"/docs/node-reference/wait-for-event"}},s={},d=[{value:"Overview",id:"overview",level:2},{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2},{value:"Editor Settings",id:"editor-settings",level:2},{value:"Example 1: Reuse a graph in multiple places",id:"example-1-reuse-a-graph-in-multiple-places",level:2},{value:"Example 2: Handle errors in a subgraph",id:"example-2-handle-errors-in-a-subgraph",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"FAQ",id:"faq",level:2},{value:"See Also",id:"see-also",level:2}],h={toc:d},c="wrapper";function m(e){let{components:t,...u}=e;return(0,n.kt)(c,(0,r.Z)({},h,u,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Subgraph Node Screenshot",src:a(6742).Z,width:"1016",height:"396"})),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"The Subgraph Node allows you to execute another graph within the current graph. This is useful for reusing logic across multiple graphs, or for breaking down complex graphs into smaller, more manageable pieces."),(0,n.kt)("p",null,"The inputs and outputs of the Subgraph Node are defined by ",(0,n.kt)("a",{parentName:"p",href:"/docs/node-reference/graph-input"},"Graph Input Nodes")," and ",(0,n.kt)("a",{parentName:"p",href:"/docs/node-reference/graph-output"},"Graph Output Nodes")," within the subgraph. The Subgraph Node will automatically update its inputs and outputs to match those of the selected subgraph."),(0,n.kt)("p",null,"The Subgraph Node also has an optional error output. If enabled, any errors that occur while executing the subgraph will be caught and output from the error output port. If not enabled, errors will cause the entire graph to fail."),(0,n.kt)(l.Z,{defaultValue:"inputs",values:[{label:"Inputs",value:"inputs"},{label:"Outputs",value:"outputs"},{label:"Editor Settings",value:"settings"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"inputs",mdxType:"TabItem"},(0,n.kt)("h2",{id:"inputs"},"Inputs"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Title"),(0,n.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,n.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"(custom names)"),(0,n.kt)("td",{parentName:"tr",align:null},"Any"),(0,n.kt)("td",{parentName:"tr",align:null},"The input values passed into the subgraph. Dynamic based on the inputs configured in the subgraph."),(0,n.kt)("td",{parentName:"tr",align:null},"N/A"),(0,n.kt)("td",{parentName:"tr",align:null},"Always accepts any data type."))))),(0,n.kt)(o.Z,{value:"outputs",mdxType:"TabItem"},(0,n.kt)("h2",{id:"outputs"},"Outputs"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Title"),(0,n.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"(custom names)"),(0,n.kt)("td",{parentName:"tr",align:null},"Any"),(0,n.kt)("td",{parentName:"tr",align:null},"The output values from the execution of the subgraph. Dynamic based on the outputs configured in the subgraph."),(0,n.kt)("td",{parentName:"tr",align:null},"Always accepts any data type.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Error"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:null},"If the subgraph errors, will be populated with the error message."),(0,n.kt)("td",{parentName:"tr",align:null},"Only enabled if ",(0,n.kt)("inlineCode",{parentName:"td"},"Use Error Output")," is turned on. If ",(0,n.kt)("inlineCode",{parentName:"td"},"Use Error Output")," is turned off, the node will error instead."))))),(0,n.kt)(o.Z,{value:"settings",mdxType:"TabItem"},(0,n.kt)("h2",{id:"editor-settings"},"Editor Settings"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Setting"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,n.kt)("th",{parentName:"tr",align:null},"Use Input Toggle"),(0,n.kt)("th",{parentName:"tr",align:null},"Input Data Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Graph"),(0,n.kt)("td",{parentName:"tr",align:null},"The graph to execute when this node is ran. Must be a graph in the same project."),(0,n.kt)("td",{parentName:"tr",align:null},"(required)"),(0,n.kt)("td",{parentName:"tr",align:null},"No"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Use Error Output"),(0,n.kt)("td",{parentName:"tr",align:null},"If enabled, then the Subgraph node will not fail, but instead any error will appear in the ",(0,n.kt)("inlineCode",{parentName:"td"},"Error")," output port of the node. If disabled, the entire Subgraph node will error if the call errors."),(0,n.kt)("td",{parentName:"tr",align:null},"False"),(0,n.kt)("td",{parentName:"tr",align:null},"No"),(0,n.kt)("td",{parentName:"tr",align:null},"N/A")))))),(0,n.kt)("h2",{id:"example-1-reuse-a-graph-in-multiple-places"},"Example 1: Reuse a graph in multiple places"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Create a new graph in your project, and add a ",(0,n.kt)("a",{parentName:"li",href:"/docs/node-reference/graph-input"},"Graph Input Node")," and a ",(0,n.kt)("a",{parentName:"li",href:"/docs/node-reference/graph-output"},"Graph Output Node")," to it. Connect the Graph Input Node to a ",(0,n.kt)("a",{parentName:"li",href:"/docs/node-reference/text"},"Text Node")," and connect that node to Graph Output Node."),(0,n.kt)("li",{parentName:"ol"},"Update the Text node to have the text ",(0,n.kt)("inlineCode",{parentName:"li"},"{{input}}\nHi, From Subgraph"),"."),(0,n.kt)("li",{parentName:"ol"},"In your main graph, add a Subgraph Node. In the editor settings, set the ",(0,n.kt)("inlineCode",{parentName:"li"},"Graph")," to the graph you created in step 1."),(0,n.kt)("li",{parentName:"ol"},"Connect a ",(0,n.kt)("a",{parentName:"li",href:"/docs/node-reference/text"},"Text Node")," to the input of the Subgraph Node."),(0,n.kt)("li",{parentName:"ol"},"Set the Text of the Text Node to ",(0,n.kt)("inlineCode",{parentName:"li"},"Hello Subgraph!"),"."),(0,n.kt)("li",{parentName:"ol"},"Run the graph. Note that the text is passed through the subgraph and back to the main graph with the text from the subgraph appended to it.")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Subgraph Node Example 1a",src:a(1929).Z,width:"2144",height:"1108"}),"\n",(0,n.kt)("img",{alt:"Subgraph Node Example 1b",src:a(9092).Z,width:"1768",height:"564"})),(0,n.kt)("h2",{id:"example-2-handle-errors-in-a-subgraph"},"Example 2: Handle errors in a subgraph"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Using the same graphs from Example 1, in the subgraph add a vector store node."),(0,n.kt)("li",{parentName:"ol"},"Connect all the outputs from the text node to the vector store node."),(0,n.kt)("li",{parentName:"ol"},"This will cause the Vector Store Node to Error"),(0,n.kt)("li",{parentName:"ol"},"In your main graph, add a Subgraph Node. In the editor settings enable ",(0,n.kt)("inlineCode",{parentName:"li"},"Use Error Output"),"."),(0,n.kt)("li",{parentName:"ol"},"Connect ",(0,n.kt)("a",{parentName:"li",href:"/docs/node-reference/text"},"Text Nodes")," to both outputs of the Subgraph Node."),(0,n.kt)("li",{parentName:"ol"},"Run the graph. Note that the error is output on the ",(0,n.kt)("inlineCode",{parentName:"li"},"Error")," port of the Subgraph Node, and the ",(0,n.kt)("inlineCode",{parentName:"li"},"Output")," port is not ran.")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Subgraph Node Example 2a",src:a(6688).Z,width:"2088",height:"1068"}),"\n",(0,n.kt)("img",{alt:"Subgraph Node Example 2b",src:a(5006).Z,width:"2164",height:"816"})),(0,n.kt)("h2",{id:"error-handling"},"Error Handling"),(0,n.kt)("p",null,"If the subgraph errors, then the Subgraph Node will error. If you want to handle errors in the graph, then you can enable the ",(0,n.kt)("inlineCode",{parentName:"p"},"Use Error Output")," setting. This will cause the Subgraph Node to not error, but instead pass the error message to the ",(0,n.kt)("inlineCode",{parentName:"p"},"Error")," output port. If the ",(0,n.kt)("inlineCode",{parentName:"p"},"Error")," port is populated, then the ",(0,n.kt)("inlineCode",{parentName:"p"},"Result")," port will not be ran. You can use an ",(0,n.kt)("a",{parentName:"p",href:"/docs/node-reference/if"},"If Node")," to check if the ",(0,n.kt)("inlineCode",{parentName:"p"},"Error")," port is populated, and handle the error accordingly."),(0,n.kt)("h2",{id:"faq"},"FAQ"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Q: Can I use the Subgraph Node to execute a graph in a different project?")),(0,n.kt)("p",null,"A: No, the Subgraph Node can only execute graphs within the same project."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Q: Can I use the Subgraph Node to execute a graph in a loop?")),(0,n.kt)("p",null,"A: Yes, you can use a ",(0,n.kt)("a",{parentName:"p",href:"/docs/node-reference/loop-controller"},"Loop Controller Node")," to execute a Subgraph Node in a loop. Each iteration of the loop will execute the subgraph with the current loop value as an input."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Q: Can I use the Subgraph Node to execute a graph conditionally?")),(0,n.kt)("p",null,"A: Yes, you can use an ",(0,n.kt)("a",{parentName:"p",href:"/docs/node-reference/if"},"If Node")," to conditionally execute a Subgraph Node. If the condition is false, the Subgraph Node will not be executed."),(0,n.kt)("h2",{id:"see-also"},"See Also"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/node-reference/graph-input"},"Graph Input Node")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/node-reference/graph-output"},"Graph Output Node")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/node-reference/if"},"If Node")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/node-reference/loop-controller"},"Loop Controller Node")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/node-reference/text"},"Text Node"))))}m.isMDXComponent=!0},1929:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/subgraph-node-example-01a-c85237fc7c4892d05af3555eff52c12a.png"},9092:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/subgraph-node-example-01b-8d7bc31473711c8521d419cd1f66e7f5.png"},6688:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/subgraph-node-example-02a-220b6929374137ba5a9e0d6b79e370e9.png"},5006:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/subgraph-node-example-02b-d89c737b553cc4cfb6485614bd4a2d0f.png"},6742:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/subgraph-node-0078fef79f78851bf353e5ede90b094a.png"}}]);