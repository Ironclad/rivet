"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2161],{5591:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>m});var r=n(8527);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),g=s(n),c=a,m=g["".concat(u,".").concat(c)]||g[c]||d[c]||l;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[g]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8280:(e,t,n)=>{n.d(t,{A:()=>o});var r=n(8527),a=n(4351);const l={tabItem:"tabItem_o9Hs"};function o(e){let{children:t,hidden:n,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.A)(l.tabItem,o),hidden:n},t)}},6415:(e,t,n)=>{n.d(t,{A:()=>C});var r=n(4465),a=n(8527),l=n(4351),o=n(1808),i=n(1849),u=n(7917),s=n(8418),p=n(3514);function g(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??g(n);return function(e){const t=(0,s.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function c(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.W6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u.aZ)(l),(0,a.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,l=d(e),[o,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[u,s]=m({queryString:n,groupId:r}),[g,y]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,p.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:r}),N=(()=>{const e=u??g;return c({value:e,tabValues:l})?e:null})();(0,a.useLayoutEffect)((()=>{N&&i(N)}),[N]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!c({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),y(e)}),[s,y,l]),tabValues:l}}var N=n(8613);const h={tabList:"tabList_Dwv5",tabItem:"tabItem_KiUr"};function f(e){let{className:t,block:n,selectedValue:i,selectValue:u,tabValues:s}=e;const p=[],{blockElementScrollPositionUntilNextRender:g}=(0,o.a_)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),r=s[n].value;r!==i&&(g(t),u(r))},c=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:o}=e;return a.createElement("li",(0,r.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:c,onClick:d},o,{className:(0,l.A)("tabs__item",h.tabItem,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:r}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function b(e){const t=y(e);return a.createElement("div",{className:(0,l.A)("tabs-container",h.tabList)},a.createElement(f,(0,r.A)({},e,t)),a.createElement(v,(0,r.A)({},e,t)))}function C(e){const t=(0,N.A)();return a.createElement(b,(0,r.A)({key:String(t)},e))}},3087:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>g});var r=n(4465),a=(n(8527),n(5591)),l=n(6415),o=n(8280);const i={id:"mcp-discovery",title:"MCP Discovery Node",sidebar_label:"MCP Discovery Node"},u=void 0,s={unversionedId:"node-reference/mcp-discovery",id:"node-reference/mcp-discovery",title:"MCP Discovery Node",description:"MCP Discovery Node Screenshot",source:"@site/docs/node-reference/mcp-discovery.mdx",sourceDirName:"node-reference",slug:"/node-reference/mcp-discovery",permalink:"/docs/node-reference/mcp-discovery",draft:!1,editUrl:"https://github.com/ironclad/rivet/tree/main/packages/docs/docs/node-reference/mcp-discovery.mdx",tags:[],version:"current",frontMatter:{id:"mcp-discovery",title:"MCP Discovery Node",sidebar_label:"MCP Discovery Node"},sidebar:"nodeReference",previous:{title:"Trim Chat Messages",permalink:"/docs/node-reference/trim-chat-messages"},next:{title:"MCP Tool Call Node",permalink:"/docs/node-reference/mcp-tool-call"}},p={},g=[{value:"Overview",id:"overview",level:2},{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2},{value:"Editor Settings",id:"editor-settings",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Setting up MCP Servers (for STDIO mode)",id:"setting-up-mcp-servers-for-stdio-mode",level:3},{value:"Example 1: Using HTTP Mode",id:"example-1-using-http-mode",level:2},{value:"Example 2: Using STDIO Mode with an example",id:"example-2-using-stdio-mode-with-an-example",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"FAQ",id:"faq",level:2},{value:"See Also",id:"see-also",level:2}],d={toc:g},c="wrapper";function m(e){let{components:t,...i}=e;return(0,a.yg)(c,(0,r.A)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"MCP Discovery Node Screenshot",src:n(6339).A,width:"938",height:"616"})),(0,a.yg)("h2",{id:"overview"},"Overview"),(0,a.yg)("p",null,"The ",(0,a.yg)("a",{parentName:"p",href:"https://modelcontextprotocol.io/introduction"},"Model Context Protocol (MCP)")," enables communication with MCP-compliant servers through either HTTP or Stdio transports."),(0,a.yg)("p",null,"The MCP Discovery Node enables the ability to query an MCP servers and fetch Tools or Prompts in the server."),(0,a.yg)("p",null,"Currently, the MCP Discovery Node currently utilizes the following MCP request methods for a compliant server:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://modelcontextprotocol.io/docs/concepts/tools"},"MCP Tools")," : ",(0,a.yg)("inlineCode",{parentName:"li"},"tools/list")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://modelcontextprotocol.io/docs/concepts/prompts"},"MCP Prompts"),": ",(0,a.yg)("inlineCode",{parentName:"li"},"prompts/list"))),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"MCP Discovery Node uses the official MCP Typescript SDK (",(0,a.yg)("inlineCode",{parentName:"p"},"@modelcontextprotocol/sdk"),") and requires a node executor when running the graph in the Rivet IDE.")),(0,a.yg)("p",null,"The MCP Discovery Node supports two communication modes:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"HTTP Mode"),": Uses Streamable HTTP Transport as default and a SSE Transport as a fallback for server communication."),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("strong",{parentName:"li"},"STDIO Mode"),": Launches and communicates with local MCP servers using STIDO Transport.",(0,a.yg)("blockquote",{parentName:"li"},(0,a.yg)("p",{parentName:"blockquote"},"For STDIO connections with local servers, add the MCP server config in ",(0,a.yg)("inlineCode",{parentName:"p"},"Project > Edit MCP Configuration"))))),(0,a.yg)(l.A,{defaultValue:"inputs",values:[{label:"Inputs",value:"inputs"},{label:"Outputs",value:"outputs"},{label:"Editor Settings",value:"settings"}],mdxType:"Tabs"},(0,a.yg)(o.A,{value:"inputs",mdxType:"TabItem"},(0,a.yg)("h2",{id:"inputs"},"Inputs"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Title"),(0,a.yg)("th",{parentName:"tr",align:null},"Data Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Default Value"),(0,a.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Name"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"The name for the MCP Client instance"),(0,a.yg)("td",{parentName:"tr",align:null},"mcp-client"),(0,a.yg)("td",{parentName:"tr",align:null},"Standard required parameter for an MCP Client")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Version"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"The version for the MCP Client instance"),(0,a.yg)("td",{parentName:"tr",align:null},"1.0.0"),(0,a.yg)("td",{parentName:"tr",align:null},"Standard required parameter for an MCP Client")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Server URL (HTTP)"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"The endpoint URL for the MCP server"),(0,a.yg)("td",{parentName:"tr",align:null},"None"),(0,a.yg)("td",{parentName:"tr",align:null},"Only available when using HTTP mode with Server URL Input enabled"))))),(0,a.yg)(o.A,{value:"outputs",mdxType:"TabItem"},(0,a.yg)("h2",{id:"outputs"},"Outputs"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Title"),(0,a.yg)("th",{parentName:"tr",align:null},"Data Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Tools"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"gpt-function[]")),(0,a.yg)("td",{parentName:"tr",align:null},"MCP tools returned by the MCP server"),(0,a.yg)("td",{parentName:"tr",align:null},"Returned from the ",(0,a.yg)("inlineCode",{parentName:"td"},"tools/list")," method. Only availabe when Output Tools is enabled.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Prompts"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"object")),(0,a.yg)("td",{parentName:"tr",align:null},"MCP prompts returned by the MCP server"),(0,a.yg)("td",{parentName:"tr",align:null},"Returned from the ",(0,a.yg)("inlineCode",{parentName:"td"},"tools/list")," method. Only availabe when Output Prompts is enabled."))))),(0,a.yg)(o.A,{value:"settings",mdxType:"TabItem"},(0,a.yg)("h2",{id:"editor-settings"},"Editor Settings"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Setting"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"),(0,a.yg)("th",{parentName:"tr",align:null},"Default Value"),(0,a.yg)("th",{parentName:"tr",align:null},"Use Input Toggle"),(0,a.yg)("th",{parentName:"tr",align:null},"Input Data Type"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Output Tools"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether to output tools"),(0,a.yg)("td",{parentName:"tr",align:null},"True"),(0,a.yg)("td",{parentName:"tr",align:null},"No"),(0,a.yg)("td",{parentName:"tr",align:null},"N/A")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Output Prompts"),(0,a.yg)("td",{parentName:"tr",align:null},"Whether to output prompts"),(0,a.yg)("td",{parentName:"tr",align:null},"True"),(0,a.yg)("td",{parentName:"tr",align:null},"No"),(0,a.yg)("td",{parentName:"tr",align:null},"N/A")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Name"),(0,a.yg)("td",{parentName:"tr",align:null},"The name to use for the MCP Client instance"),(0,a.yg)("td",{parentName:"tr",align:null},"mcp-client"),(0,a.yg)("td",{parentName:"tr",align:null},"Yes"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Version"),(0,a.yg)("td",{parentName:"tr",align:null},"The version to use for the MCP Client instance"),(0,a.yg)("td",{parentName:"tr",align:null},"1.0.0"),(0,a.yg)("td",{parentName:"tr",align:null},"Yes"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Transport Type"),(0,a.yg)("td",{parentName:"tr",align:null},"The mode of communication with the MCP server (HTTP or STDIO)"),(0,a.yg)("td",{parentName:"tr",align:null},"STDIO"),(0,a.yg)("td",{parentName:"tr",align:null},"No"),(0,a.yg)("td",{parentName:"tr",align:null},"N/A")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Server URL"),(0,a.yg)("td",{parentName:"tr",align:null},"The endpoint URL for the MCP server (Only HTTP)"),(0,a.yg)("td",{parentName:"tr",align:null},"http://localhost:8080/mcp"),(0,a.yg)("td",{parentName:"tr",align:null},"Yes"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Server ID"),(0,a.yg)("td",{parentName:"tr",align:null},"The MCP server ID from configuration (Only STDIO)"),(0,a.yg)("td",{parentName:"tr",align:null},"(empty)"),(0,a.yg)("td",{parentName:"tr",align:null},"No"),(0,a.yg)("td",{parentName:"tr",align:null},"N/A")))))),(0,a.yg)("h2",{id:"configuration"},"Configuration"),(0,a.yg)("h3",{id:"setting-up-mcp-servers-for-stdio-mode"},"Setting up MCP Servers (for STDIO mode)"),(0,a.yg)("p",null,"Add a JSON configuration in your Rivet project: ",(0,a.yg)("inlineCode",{parentName:"p"},"Project > MCP Configuration")),(0,a.yg)("p",null,"Your MCP Configuration is saved and associated with the Rivet project file. All available servers will be list in MCP Nodes."),(0,a.yg)("p",null,"Example configuration:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "mcpServers": {\n    "mongodb": {\n      "command": "/path/to/node",\n      "args": ["-y", "/path/to/mcp-mongo-server/build/index.js", "mongodb://localhost:27017/your-database"]\n    }\n  }\n}\n')),(0,a.yg)("h2",{id:"example-1-using-http-mode"},"Example 1: Using HTTP Mode"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Add an MCP Node to your graph"),(0,a.yg)("li",{parentName:"ol"},'Set "Transport Type" to "HTTP"'),(0,a.yg)("li",{parentName:"ol"},'Set "Server URL" to your MCP server URL (e.g., ',(0,a.yg)("inlineCode",{parentName:"li"},"http://localhost:8080/mcp"),")"),(0,a.yg)("li",{parentName:"ol"},"Make sure enable the Node Executor in Rivet (top-right menu)"),(0,a.yg)("li",{parentName:"ol"},"Run the graph to see the response from the MCP server")),(0,a.yg)("h2",{id:"example-2-using-stdio-mode-with-an-example"},"Example 2: Using STDIO Mode with an example"),(0,a.yg)("p",null,"This example references the example: ",(0,a.yg)("a",{parentName:"p",href:"https://modelcontextprotocol.io/quickstart/server#node"},"Weather MCP Server")),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"First, ensure you have set up the Weather MCP server and configured it in your ",(0,a.yg)("inlineCode",{parentName:"li"},"Project > MCP Configuration"))),(0,a.yg)("p",null,"Example configuration:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "mcpServers": {\n    "weather": {\n      "command": "node",\n      "args": ["/absolute-path/weather/build/index.js"]\n    }\n  }\n}\n')),(0,a.yg)("ol",{start:2},(0,a.yg)("li",{parentName:"ol"},"Enable the Node Executor in Rivet (top-right menu)"),(0,a.yg)("li",{parentName:"ol"},"Add an MCP Discovery Node to your graph"),(0,a.yg)("li",{parentName:"ol"},'Set "Transport Type" to "STDIO"'),(0,a.yg)("li",{parentName:"ol"},'Set "Server ID" to "weather"'),(0,a.yg)("li",{parentName:"ol"},"Run the graph to see Tools and Prompts from the server")),(0,a.yg)("h2",{id:"error-handling"},"Error Handling"),(0,a.yg)("p",null,"The MCP Node provides detailed error handling with specific error types:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"CONFIG_NOT_FOUND"),": MCP configuration file not found"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"SERVER_NOT_FOUND"),": Specified server ID not found in configuration"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"SERVER_COMMUNICATION_FAILED"),": Failed to communicate with the server"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"INVALID_SCHEMA"),": Invalid schema for input arguments")),(0,a.yg)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"STDIO Server Not Found")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Check your MCP Configuration in your Rivet Project tab"),(0,a.yg)("li",{parentName:"ul"},"Ensure absolute paths in configuration")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"HTTP Connection Failed")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Verify server URL"),(0,a.yg)("li",{parentName:"ul"},"Check CORS settings"),(0,a.yg)("li",{parentName:"ul"},"Confirm network connectivity")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Node Executor Issues")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Enable Node executor in Rivet settings"),(0,a.yg)("li",{parentName:"ul"},"Verify Node.js installation"),(0,a.yg)("li",{parentName:"ul"},"Check server executable permissions")),(0,a.yg)("h2",{id:"faq"},"FAQ"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Q: Can I use the MCP Node in the browser executor?")),(0,a.yg)("p",null,"A: No. All MCP nodes use the official MCP Node SDK and require the Node Executor to run locally."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Q: How do I handle authentication with MCP servers?")),(0,a.yg)("p",null,"A:"),(0,a.yg)("p",null,"For STDIO mode, authentication details should be included in your server configuration.\nFor HTTP mode, this will be a follow-up feature and not accessible at the moment."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Q: Can I use multiple MCP servers in the same graph?")),(0,a.yg)("p",null,"A: Yes, you can add multiple MCP Nodes, each can be configured to communicate with a different server."),(0,a.yg)("h2",{id:"see-also"},"See Also"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/docs/node-reference/mcp-tool-call"},"MCP Tool Call Node")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/docs/node-reference/mcp-get-prompt"},"MCP Get Prompt Node")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/docs/node-reference/object"},"Object Node")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/docs/node-reference/text"},"Text Node")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/docs/node-reference/to-json"},"To JSON Node")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/docs/node-reference/extract-json"},"Extract JSON Node")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/docs/node-reference/gpt-function"},"GPT Function"))))}m.isMDXComponent=!0},6339:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/mcp_discovery_node-5ce90d4ea4b2ec6ab9567ead4fcd9f80.png"}}]);