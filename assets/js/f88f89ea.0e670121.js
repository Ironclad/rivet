"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4732],{5591:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>s});var n=a(8527);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var g=n.createContext({}),o=function(e){var t=n.useContext(g),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=o(e.components);return n.createElement(g.Provider,{value:t},e.children)},y="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,g=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),y=o(a),m=r,s=y["".concat(g,".").concat(m)]||y[m]||u[m]||l;return a?n.createElement(s,i(i({ref:t},p),{},{components:a})):n.createElement(s,i({ref:t},p))}));function s(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var d={};for(var g in t)hasOwnProperty.call(t,g)&&(d[g]=t[g]);d.originalType=e,d[y]="string"==typeof e?e:r,i[1]=d;for(var o=2;o<l;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8869:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var n=a(4465),r=(a(8527),a(5591));const l={},i="Data Types",d={unversionedId:"user-guide/data-types",id:"user-guide/data-types",title:"Data Types",description:"Internally, the data the passes through Rivet is marked as a number of data types. When integrating Rivet with your own application, you will need to know what these data types are and how to handle them.",source:"@site/docs/user-guide/data-types.md",sourceDirName:"user-guide",slug:"/user-guide/data-types",permalink:"/docs/user-guide/data-types",draft:!1,editUrl:"https://github.com/ironclad/rivet/tree/main/packages/docs/docs/user-guide/data-types.md",tags:[],version:"current",frontMatter:{},sidebar:"userGuide",previous:{title:"Trivet Library",permalink:"/docs/user-guide/trivet-library"},next:{title:"Control Flow",permalink:"/docs/user-guide/control-flow"}},g={},o=[{value:"DataValue",id:"datavalue",level:2},{value:"Decorators",id:"decorators",level:2},{value:"Types",id:"types",level:2}],p={toc:o},y="wrapper";function u(e){let{components:t,...a}=e;return(0,r.yg)(y,(0,n.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"data-types"},"Data Types"),(0,r.yg)("p",null,"Internally, the data the passes through Rivet is marked as a number of data types. When integrating Rivet with your own application, you will need to know what these data types are and how to handle them."),(0,r.yg)("h2",{id:"datavalue"},"DataValue"),(0,r.yg)("p",null,"A DataValue is a value that can be passed through Rivet. It is a union of all the possible data types that can be passed through Rivet. It is represented as an object with a ",(0,r.yg)("inlineCode",{parentName:"p"},"type")," property and a ",(0,r.yg)("inlineCode",{parentName:"p"},"value")," property. The ",(0,r.yg)("inlineCode",{parentName:"p"},"type")," key is in the table below, except when additional type decorators are present on the type."),(0,r.yg)("h2",{id:"decorators"},"Decorators"),(0,r.yg)("p",null,"A type may have the following decorators applied to it, which change the type. Decorators can be combined on a type name, for example a type can be ",(0,r.yg)("inlineCode",{parentName:"p"},"fn<string[]>"),". Valid decorators are:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Decorator"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]")),(0,r.yg)("td",{parentName:"tr",align:null},"The type is an array of the type before the brackets.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"fn<type>")),(0,r.yg)("td",{parentName:"tr",align:null},"The type is a function that returns the type inside the angle brackets.")))),(0,r.yg)("h2",{id:"types"},"Types"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"),(0,r.yg)("th",{parentName:"tr",align:null},"TypeScript Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"any")),(0,r.yg)("td",{parentName:"tr",align:null},"A special type of data that can store ",(0,r.yg)("em",{parentName:"td"},"anything"),"."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"unknown")),(0,r.yg)("td",{parentName:"tr",align:null},"Often, the value contained will be attempted to be either inferred based on the JavaScript type of the value, or it will be attempted to be coerced into a desired data type. Avoid using ",(0,r.yg)("inlineCode",{parentName:"td"},"any")," in most cases, especially when you already know the type of a value.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"boolean")),(0,r.yg)("td",{parentName:"tr",align:null},"A boolean true or false."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"boolean")),(0,r.yg)("td",{parentName:"tr",align:null},"Equivalent to the JavaScript ",(0,r.yg)("inlineCode",{parentName:"td"},"boolean")," type.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"A string value."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Equivalent to the JavaScript ",(0,r.yg)("inlineCode",{parentName:"td"},"string")," type.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"number")),(0,r.yg)("td",{parentName:"tr",align:null},"A number value."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"number")),(0,r.yg)("td",{parentName:"tr",align:null},"Equivalent to the JavaScript ",(0,r.yg)("inlineCode",{parentName:"td"},"number")," type.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"date")),(0,r.yg)("td",{parentName:"tr",align:null},"A date value."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"ISO-8601 date string.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"time")),(0,r.yg)("td",{parentName:"tr",align:null},"A time value."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"ISO-8601 time string.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"datetime")),(0,r.yg)("td",{parentName:"tr",align:null},"A datetime value."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"ISO-8601 datetime string.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"chat-message")),(0,r.yg)("td",{parentName:"tr",align:null},"A representation of a chat message to sent to an LLM, with attached metadata such as who is sending it."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"{ type: string; message: string; name?: string; function_call?: string }")),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"object")),(0,r.yg)("td",{parentName:"tr",align:null},"An object value."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Record<string, unknown>")),(0,r.yg)("td",{parentName:"tr",align:null},"Roughly equivalent to the JavaScript ",(0,r.yg)("inlineCode",{parentName:"td"},"object")," type. Often used interchangably with ",(0,r.yg)("inlineCode",{parentName:"td"},"any"),", and may be an array sometimes.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"control-flow-excluded")),(0,r.yg)("td",{parentName:"tr",align:null},"A value that is excluded from control flow."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"undefined")),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"gpt-function")),(0,r.yg)("td",{parentName:"tr",align:null},"A definition of a function that GPT can evaluate."),(0,r.yg)("td",{parentName:"tr",align:null},"(See Rivet source)"),(0,r.yg)("td",{parentName:"tr",align:null},'Only used by the Chat node when "Enable function use" is turned on.')),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"vector")),(0,r.yg)("td",{parentName:"tr",align:null},"A vector of numbers."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"number[]")),(0,r.yg)("td",{parentName:"tr",align:null},"Used when generating and using embeddings.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"image")),(0,r.yg)("td",{parentName:"tr",align:null},"An image value."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"{ mediaType: string; data: UInt8Array; }")),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"audio")),(0,r.yg)("td",{parentName:"tr",align:null},"An audio value."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"{ mediaType: string; eata: UInt8Array; }")),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"binary")),(0,r.yg)("td",{parentName:"tr",align:null},"A binary value."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"UInt8Array")),(0,r.yg)("td",{parentName:"tr",align:null})))))}u.isMDXComponent=!0}}]);